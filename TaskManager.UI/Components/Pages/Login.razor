@page "/"
@using TaskManager.UI.Services
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject AuthService AuthService
@inject AppState appState

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow p-5" style="width: 100%; max-width: 480px;">
        <h3 class="text-start text-muted mb-4 tw-bold">Login</h3>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }

        <div class="form-group mb-3">
            <label>Usuário</label>
            <input class="form-control" @bind="Username" />
        </div>

        <div class="form-group mb-4">
            <label>Senha</label>
            <input type="password" class="form-control" @bind="Password" />
        </div>

        <button class="btn btn-primary w-100 fw-bold" @onclick="LoginUsuario">Entrar</button>
    </div>
</div>

@code {
    private string Username;
    private string Password;
    private string ErrorMessage;

    private async Task LoginUsuario()
    {
        ErrorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(Password))
        {
            ErrorMessage = "Preencha todos os campos.";
            return;
        }

        var usuario = await AuthService.LoginAsync(Username, Password);

        if (usuario != null)
        {
            appState.SetUsuario(usuario);
            Navigation.NavigateTo("/tarefas", forceLoad: true);
        }
        else
        {
            ErrorMessage = "Usuário ou senha inválidos.";
        }
    }
}
